{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","chosenUser","users","find","userId","classNames","completed","title","TodoList","todos","map","App","useState","selectedUser","setSelectedUser","selectedTitle","setSelectedTitle","todosFromServer","setTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","prevTodos","type","value","onChange","target","placeholder","disabled","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.350ca783.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <>\n      {user && (\n        <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n          {user.name}\n        </a>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport users from '../../api/users';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const chosenUser = users.find(user => user.id === todo.userId) || null;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': todo.completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={chosenUser} />\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return <TodoInfo todo={todo} key={todo.id} />;\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState('');\n  const [selectedTitle, setSelectedTitle] = useState('');\n  const [todos, setTodos] = useState(todosFromServer);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const formValidation = () => {\n    if (selectedTitle.trim() && selectedUser !== '') {\n      return true;\n    }\n\n    if (!selectedTitle) {\n      setTitleError(true);\n    }\n\n    if (selectedUser === '') {\n      setUserError(true);\n    }\n\n    setTitleError(true);\n\n    return false;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!formValidation()) {\n      return;\n    }\n\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n    const newTodo = {\n      id: newId,\n      title: selectedTitle,\n      userId: +selectedUser,\n      completed: false,\n    };\n\n    setTodos(prevTodos => {\n      return (\n        [\n          ...prevTodos,\n          newTodo,\n        ]\n      );\n    });\n\n    setSelectedTitle('');\n    setSelectedUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={selectedTitle}\n              onChange={(event) => {\n                setSelectedTitle(event.target.value);\n                setTitleError(false);\n              }}\n              placeholder=\"Please enter a title\"\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              name=\"user\"\n              onChange={(event) => {\n                setSelectedUser(event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => {\n                return (\n                  <option value={user.id} key={user.id}>{user.name}</option>\n                );\n              })}\n            </select>\n          </label>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}